#!/usr/bin/env bash 

script_version=1.2

check_command_exists() {
    which ${@} >/dev/null 2>&1 && return
}

install_package() {
    status_desc "Installing ${@}..."
    if check_command_exists dnf; then
        sudo dnf install -yq ${@}
    elif check_command_exists apt; then
        sudo apt install -y ${@}
    elif check_command_exists pacman; then
        sudo pacman -S --no-confirm --quiet ${@}
    elif check_command_exists brew; then
        sudo brew install ${@} --force --quiet
    else
        status_error "No compatible package manager found."
        exit
    fi

}

check_and_install() {
    status_desc "Checking if ${1} is installed..."
    if ! check_command_exists ${1}; then
        status_warning "${1} not installed!"
        install_package ${1}
    fi

    if check_command_exists ${1}; then
        status_ok "${1} has been successfully installed."
    else
        status_error "Failed to install ${1}!"
        exit
    fi
}

show_intro() {
    clear
    if ! check_command_exists figlet || ! check_command_exists lolcat; then
        echo "$(tput setaf 6 && tput bold)Zsh config installer$(tput sgr0)"
        echo -e "Installer v${script_version}\n"
        echo -e "(c) Beau Jean van Bemmel, 2022 - $(date "+%Y")\n"
        return
    fi

    echo "Zsh config installer" | figlet | lolcat
    echo -e "Installer v${script_version}\n"
    echo -e "(c) Beau Jean van Bemmel, $(date "+%Y")\n"
} >&2

status_desc() {
    echo -e "$(tput setaf 244 && tput bold)${@}$(tput sgr0) \n"
} >&2

status_error() {
    echo -e "$(tput setab 1 && tput setaf 0 && tput bold) ERROR! $(tput sgr0) ${1}\n"
    if [[ $(echo ${2} | wc -l) -gt 0 ]]; then
        status_desc ${2}
    fi
    return 1
} >&2

status_warning() {
    echo -e "$(tput setab 11 && tput setaf 0 && tput bold) WARN! $(tput sgr0) ${1}\n"
    if [[ $(echo ${2} | wc -l) -gt 0 ]]; then
        status_desc ${2}
    fi
} >&2

status_ok() {
    echo -e "$(tput setab 2 && tput setaf 0 && tput bold) OK! $(tput sgr0) ${1}\n"
    if [[ $(${2} | wc -l) -gt 0 ]]; then
        status_desc ${1}
    fi
} >&2

check_root() {
    current_user=$(whoami)

    if [ ${current_user} != 'root' ]; then
        status_warning "User not root!" "Password authentication might be required."
    else
        status_ok "User is root!"
    fi
}

# Initialization.
# Check for dependencies and permissions.
show_intro
sleep 3s

check_root
check_and_install sudo
check_and_install zsh
check_and_install git

status_desc "Checking if Oh My Zsh is installed..."
if [ -d $HOME/.oh-my-zsh ]; then
    status_warning "Oh My Zsh directory already exists."
else
    status_desc "Installing Oh My Zsh"
    if ! sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" ; then
        status_error "Something went wrong during the Oh My Zsh installation!" "Exiting program..."
        exit
    fi
fi

status_desc "Installing zsh-z..."
if ! git clone https://github.com/agkozak/zsh-z ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-z ; then
    status_error "Something went wrong when cloning zsh-z!" "Exiting program..."
    exit
fi
status_ok "Zsh-z has been successfully cloned."

status_desc "Installing Zsh-autosuggestions..."
if ! git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions ; then
    status_error "Something went wrong when cloning zsh-autosuggestions!" "Exiting program..."
    exit
fi
status_ok "Zsh-autosuggestions has been successfully cloned."

status_desc "Installing Zsh-syntax-highlighting..."
if ! git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting ; then
    status_error "Something went wrong when cloning zsh-syntax-highlighting!" "Exiting program..."
    exit
fi
status_ok "zsh-syntax-highlighting been successfully cloned."

status_desc "Looking up fonts directory..."

if [ -d $HOME/.local/share/fonts ]; then
    font_dir=$HOME/.local/share/fonts
    status_ok "Found the fonts directory."
    install_fonts=true
elif [ -d /usr/local/share/fonts ]; then
    font_dir=/usr/local/share/fonts
    status_ok "Found the fonts directory."
    install_fonts=true
else
    status_error "Fonts directory not found." "Will proceed without installing any fonts."
    install_fonts=false
fi

if [ ${install_fonts} = true ]; then
    status_desc "Installing fonts..."
    if ! sudo curl -L -o ${font_dir}/MesloLGS\ NF\ Regular.ttf https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf; then
        status_error "Could not install font!" "Exiting program..."
        exit
    fi

    if ! sudo curl -L -o ${font_dir}/MesloLGS\ NF\ Bold.ttf https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf; then
        status_error "Could not install font!" "Exiting program..."
        exit
    fi

    if ! sudo curl -L -o ${font_dir}/MesloLGS\ NF\ Italic.ttf https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf; then
        status_error "Could not install font!" "Exiting program..."
        exit
    fi

    if ! sudo curl -L -o ${font_dir}/MesloLGS\ NF\ Bold\ Italic.ttf https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf; then
        status_error "Could not install font!" "Exiting program..."
        exit
    fi
    status_ok "Installed fonts successfully."
else
    status_warning "Fonts won't be installed"
fi

status_desc "Downloading .zshrc file..."
if ! curl -s https://dotfiles.bjvanbemmel.nl/zsh/raws/.zshrc > $HOME/.zshrc; then
    status_error "Something went wrong when downloading the .zshrc file!" "Exiting program..."
    exit
fi
status_ok ".zshrc file successfully downloaded."

if ! curl -s https://dotfiles.bjvanbemmel.nl/zsh/raws/.p10k.zsh > $HOME/.p10k.zsh; then
    status_error "Something went wrong when downloading the .p10k.zsh file!" "Exiting program..."
    exit
fi
status_ok ".p10k.zsh file successfully downloaded."

status_desc "Installing powerlevel10k..."
if ! git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k; then
    status_error "Something went wrong when cloning powerlevel10k!" "Exiting program..."
    exit
fi

status_desc "Installing zsh-vi-mode..."
if ! git clone https://github.com/bjvanbemmel/zsh-vi-mode-fixed-syntax-highlighting ${ZSH_CUSTOM:-$HOME/.oh-my-zsh}/plugins/zsh-vi-mode; then
    status_error "Something went wrong when cloning zsh-vi-mode!" "Exiting program..."
    exit
fi
status_ok "Zsh-vi-mode successfully installed."

status_desc "Cloning catppuccin-zsh-syntax-highlighting..."
if ! git clone https://github.com/catppuccin/zsh-syntax-highlighting.git; then
    status_error "Something went wrong when cloning catppuccin-zsh-syntax-highlighting" "Exiting program..."
    exit
fi
status_ok "catppuccin-zsh-syntax-highlighting successfully cloned."

mkdir $HOME/.zsh

status_desc "Installing catppuccin-zsh-syntax-highlighting..."
if ! cp -v ./zsh-syntax-highlighting/themes/catppuccin_mocha-zsh-syntax-highlighting.zsh $HOME/.zsh/catppuccin-zsh-syntax-highlighting.zsh; then
    status_error "Something went wrong when installing catppuccin-zsh-syntax-highlighting!" "Exiting program..."
    exit
fi
status_ok "catppuccin-zsh-syntax-highlighting successfully installed."

rm -rf ./zsh-syntax-highlighting

status_desc "Changing default shell..."

if ! chsh -s $(which zsh); then
    status_error "Could not change the default shell." "Proceeding..."
fi
status_ok "Changed default shell to zsh."

if [ ${install_fonts=false} ]; then
    status_warning "Failed to install the recommended fonts during this installation.\nThe recommended font is MesloLGS NF, maybe consider doing it manually."
fi
status_ok "Installation complete! Enjoy your new configuration by typing $(tput setab 255 && tput setaf 0 && tput bold) zsh $(tput sgr0)" >&2
